name: GitHub Pages Overwriter
author: rayluo

# Description needs to be shorter than 125 bytes.
description: Overwrite your Github Pages branch with content of current workdir, thus deploy/publish without polluting your repo history.

inputs:
  source-directory:
    description: The name of the source directory that you wish it to become the wwwroot of your website
    required: true
  target-branch:
    description: The name of the branch that would be OVERWRITTEN by current workdir, you will then configure your Github Pages to serve this branch.
    required: false
    default: gh-pages
  repository:
    description: The GitHub repository (in the format 'owner/repo') if you want to push it to other repo
    required: false
    default: ${{ github.repository }}
  gh-token:
    description: The GitHub token used for authentication
    required: false
    default: ""
  ignore-empty:
    description: Whether to ignore empty commits
    required: false
    default: "false"
  user-name:
    description: The Git user.name configuration
    required: false
    default: "Github Pages Overwriter"
  user-email:
    description: The Git user.email configuration
    required: false
    default: "GithubPagesOverwriter@users.noreply.github.com"

runs:
  using: composite
  steps:

    - shell: bash
      run: |
        
        modify_origin() {
          # Check if the GitHub token is not set
          if [ -z "${{ inputs.gh-token }}" ]; then
            # Check if the input repository is equal to the GitHub repository
            if [ "${{ inputs.repository }}" == "${{ github.repository }}" ]; then
              return 0  # No changes needed, return from the function
            else
              echo "Error: GitHub token (gh-token) is required to push to other repo."
              exit 1  # Exit with an error
            fi
          fi
        
          git remote set-url origin https://x-access-token:${{ inputs.gh-token }}@github.com/${{ inputs.repository }}

        }
        
        configure_git() {
          # Configure Git user name and email
          git config user.name "${{ inputs.user-name }}"
          git config user.email "${{ inputs.user-email }}"
        }
        
        modify_origin
        configure_git
        
        # The following 2 lines are not really necessary,
        # because we do not intend to push current branch.
        # But we choose to use target branch name as a temporary local work branch,
        # thus avoid a potential error of committing to the trigger branch.
        git branch -f ${{ inputs.target-branch }} HEAD
        git checkout ${{ inputs.target-branch }}

        # The commit and push happen to work without authentication
        # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
        git config user.name "Github Pages Overwriter"
        git config user.email "GithubPagesOverwriter@users.noreply.github.com"

        # The previous commit message may contain reference to github issues,
        # we wipe it out, so that it won't show up in the inevitable duplicate commit.
        git commit --amend -m "This commit will be automatically published"

        # Check if we should allow empty commits
        if [ "${{ inputs.ignore-empty }}" = "false" ]; then
          git commit --allow-empty -m "Automated publish"
        else
          git commit -m "Automated publish" || echo "No changes to commit"
        fi

    - name: Push the build output to github pages
      shell: bash
      ##if: ${{ inputs.source-directory == '.' }}
      # Astonishedly, the "if" command does not work in an action shipped to marketplace,
      # so that there is even a 3rd-party github action to do that
      # (https://github.com/marketplace/actions/conditional-value-for-github-action)
      # But that seems like an overkill. So, we'd use "if" in bash instead.
      run: >  # https://yaml-multiline.info/
        if [ "${{ inputs.source-directory }}" == "." ]; then
          git push -f origin HEAD:refs/heads/${{ inputs.target-branch }}
        else
          # Inspired from https://gist.github.com/cobyism/4730490#gistcomment-1374989
          git push -f origin `git subtree split -P ${{ inputs.source-directory }}`:refs/heads/${{ inputs.target-branch }}
        fi

branding:
  icon: copy
  color: green

